using System.Collections;
using System.Collections.Generic;

namespace Parametrics;

public class PointCollection : IEnumerable<Point> {
    private readonly SortedSet<Point> _points = new();

    public PointCollection(IComparer<Point> comparer) { _points = new SortedSet<Point>(comparer); }

    public PointCollection(IEnumerable<Point> points) => _points.AddRange(points);

    public PointCollection(params Point[] points) => _points.AddRange(points);

    public int Count => _points.Count;

    public Point this[int index] {
        get => _points[index];
        set => _points[index] = value;
    }

    public void Add(Point point) => _points.Add(point);

    public void AddRange(IEnumerable<Point> points) => _points.AddRange(points);

    public void Clear() => _points.Clear();

    public IEnumerator<Point> GetEnumerator() => _points.GetEnumerator();

    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}